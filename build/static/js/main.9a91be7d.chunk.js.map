{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","content","onClick","services_notes","axios","get","then","response","data","newObject","post","put","concat","id","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","useEffect","noteService","initialNotes","notesToShow","filter","map","components_Note","key","find","n","changedNote","objectSpread","returnedNote","catch","error","alert","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","value","onChange","target","type","ReactDOM","render","src_App","document","getElementById"],"mappings":"wLAUeA,EARF,SAAAC,GAAgC,IAA7BC,EAA6BD,EAA7BC,KAAMC,EAAuBF,EAAvBE,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACEC,EAAAC,EAAAC,cAAA,UAAKN,EAAKO,QAAV,IAAmBH,EAAAC,EAAAC,cAAA,UAAQE,QAASP,GAAmBC,qBCY5CO,EAfA,WAEb,OADgBC,IAAMC,IAHR,cAICC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAa5BL,EAVA,SAAAM,GAEb,OADgBL,IAAMM,KARR,aAQsBD,GACrBH,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAQ5BL,EALA,SAACM,GAEd,OADgBL,IAAMO,IAAN,GAAAC,OAbF,aAaE,KAAAA,OAAwBH,EAAUI,IAAMJ,GACzCH,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QCsE5BM,EAjFH,WAAM,IAAAC,EACUC,mBAAS,IADnBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTK,EADSH,EAAA,GACFI,EADEJ,EAAA,GAAAK,EAEcN,mBAAS,IAFvBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAETE,EAFSD,EAAA,GAEAE,EAFAF,EAAA,GAAAG,EAGcV,oBAAS,GAHvBW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGTE,EAHSD,EAAA,GAGAE,EAHAF,EAAA,GAKhBG,oBAAU,WACRC,IACYzB,KAAK,SAAA0B,GACbX,EAASW,MAEZ,IAEH,IAgBMC,EAAcL,EAChBR,EACAA,EAAMc,OAAO,SAAAxC,GAAI,OAAIA,EAAKG,YA6B9B,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQE,QAAS,kBAAM2B,GAAYD,KAAnC,eACSA,EAAU,qBAAiB,WAGtC9B,EAAAC,EAAAC,cAAA,UAhBeiC,EAAYE,IAAI,SAAAzC,GAAI,OACrCI,EAAAC,EAAAC,cAACoC,EAAD,CACEC,IAAK3C,EAAKmB,GACVnB,KAAMA,EACNC,iBAAkB,kBA3CK,SAAAkB,GACzB,IAAMnB,EAAO0B,EAAMkB,KAAK,SAAAC,GAAC,OAAIA,EAAE1B,KAAOA,IAChC2B,EAAWtB,OAAAuB,EAAA,EAAAvB,CAAA,GAAQxB,EAAR,CAAcG,WAAYH,EAAKG,YAEhDkC,EACUS,GAAalC,KAAK,SAAAoC,GACxBrB,EAASD,EAAMe,IAAI,SAAAzC,GAAI,OAAIA,EAAKmB,KAAOA,EAAKnB,EAAOgD,OAEpDC,MAAM,SAAAC,GACLC,MAAK,iBAAAjC,OACclB,EAAKO,QADnB,kDAGLoB,EAASD,EAAMc,OAAO,SAAAK,GAAC,OAAIA,EAAE1B,KAAOA,OA+BdiC,CAAmBpD,EAAKmB,UAehDf,EAAAC,EAAAC,cAAA,QAAM+C,SAtCM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBjD,QAASuB,EACT2B,MAAM,IAAIC,MAAOC,cACjBxD,UAAWyD,KAAKC,SAAW,IAG7BxB,EACUmB,GAAY5C,KAAK,SAAAoC,GACvBrB,EAASD,EAAMR,OAAO8B,IACtBjB,EAAW,QA4BX3B,EAAAC,EAAAC,cAAA,SACEwD,MAAOhC,EACPiC,SA1BiB,SAACT,GACxBvB,EAAWuB,EAAMU,OAAOF,UA2BpB1D,EAAAC,EAAAC,cAAA,UAAQ2D,KAAK,UAAb,eC3ERC,IAASC,OACP/D,EAAAC,EAAAC,cAAC8D,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.9a91be7d.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? 'make not important' : 'make important';\n\n  return (\n    <li>{note.content} <button onClick={toggleImportance}>{label}</button></li>\n  )\n}\n\nexport default Note","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n};\n\nconst update = (newObject) => {\n  const request = axios.put(`${baseUrl}/${newObject.id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react' \nimport Note from './components/Note'\nimport noteService from './services/notes'\n\nconst App = () => {\n  const [notes, setNotes] = useState([]) \n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n\n  useEffect(() => {\n    noteService\n      .getAll().then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(changedNote).then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        alert(\n          `muistiinpano '${note.content}' on jo valitettavasti poistettu palvelimelta`\n        );\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5\n    }\n\n    noteService\n      .create(noteObject).then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const rows = () => notesToShow.map(note =>\n    <Note\n      key={note.id}\n      note={note}\n      toggleImportance={() => toggleImportanceOf(note.id)}\n    />\n  )\n\n  return (\n    <div>\n      <h1>Muistiinpanot</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          n채yt채 {showAll ? 'vain t채rke채t' : 'kaikki'}\n        </button>\n      </div>\n      <ul>\n        {rows()}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">tallenna</button>\n      </form>      \n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}